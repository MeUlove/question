#include<iostream>
#include<cmath>
#include<cstring>
#include<cstdio>
#include<algorithm>
using namespace std;
int n;
int a0,a1,b0,b1;
int ans,m,tot;
int p[2000100];
int shu[200010],countt[200010];
int gcd(int a,int b)
{
	if(b==0)return a;
	else return gcd(b,a%b);
}
bool check(int x)
{
	if(gcd(x,a0)==a1&&(1ll*x*b0/gcd(x,b0)==b1))return true;
	return false;
}
void dfs(int ss,int sum)
{
	int maxn;
	if(ss>m)
	{
		if(sum>=a1&&sum%a1==0)
		{
			tot++;
			p[tot]=sum;
		}
		return;
	}
	maxn=sum;
	dfs(ss+1,sum);
	for(int j=1;j<=countt[ss];j++)
	{
		maxn=maxn*shu[ss];//用maxn，是因为在累乘 
		dfs(ss+1,maxn);
	}
}
void work(int x)//分解质因数 
{
	int k=x;
	for(int i=2;i<=sqrt(x);i++)
	{
		if(k%i==0)
		{
			m++;
			shu[m]=i;
			countt[m]=0;
		}
		while(k%i==0)
		{
			k=k/i;
			countt[m]++;
		}
	}
	if(k!=1)
	{
		m++;
		countt[m]=1;
		shu[m]=k;
	}
	dfs(1,1);
}
int main()
{
	freopen("ll.out","w",stdout);
	scanf("%d",&n);
	for(int i=1;i<=n;i++)
	{
		ans=0;
		m=0;
		tot=0;
		scanf("%d %d %d %d",&a0,&a1,&b0,&b1);
		work(b1);
		for(int j=tot;j>=1;j--)
		{
			if(check(p[j]))ans++;
		}
		printf("%d\n",ans);
	}
	
	return 0;
}
